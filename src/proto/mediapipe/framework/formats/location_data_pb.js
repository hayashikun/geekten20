// source: mediapipe/framework/formats/location_data.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var mediapipe_framework_formats_annotation_rasterization_pb = require('../../../mediapipe/framework/formats/annotation/rasterization_pb.js');
goog.object.extend(proto, mediapipe_framework_formats_annotation_rasterization_pb);
goog.exportSymbol('proto.mediapipe.LocationData', null, global);
goog.exportSymbol('proto.mediapipe.LocationData.BinaryMask', null, global);
goog.exportSymbol('proto.mediapipe.LocationData.BoundingBox', null, global);
goog.exportSymbol('proto.mediapipe.LocationData.Format', null, global);
goog.exportSymbol('proto.mediapipe.LocationData.RelativeBoundingBox', null, global);
goog.exportSymbol('proto.mediapipe.LocationData.RelativeKeypoint', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mediapipe.LocationData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mediapipe.LocationData.repeatedFields_, null);
};
goog.inherits(proto.mediapipe.LocationData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mediapipe.LocationData.displayName = 'proto.mediapipe.LocationData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mediapipe.LocationData.BoundingBox = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mediapipe.LocationData.BoundingBox, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mediapipe.LocationData.BoundingBox.displayName = 'proto.mediapipe.LocationData.BoundingBox';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mediapipe.LocationData.RelativeBoundingBox = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mediapipe.LocationData.RelativeBoundingBox, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mediapipe.LocationData.RelativeBoundingBox.displayName = 'proto.mediapipe.LocationData.RelativeBoundingBox';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mediapipe.LocationData.BinaryMask = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mediapipe.LocationData.BinaryMask, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mediapipe.LocationData.BinaryMask.displayName = 'proto.mediapipe.LocationData.BinaryMask';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mediapipe.LocationData.RelativeKeypoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mediapipe.LocationData.RelativeKeypoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mediapipe.LocationData.RelativeKeypoint.displayName = 'proto.mediapipe.LocationData.RelativeKeypoint';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mediapipe.LocationData.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mediapipe.LocationData.prototype.toObject = function(opt_includeInstance) {
  return proto.mediapipe.LocationData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mediapipe.LocationData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.LocationData.toObject = function(includeInstance, msg) {
  var f, obj = {
    format: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    boundingBox: (f = msg.getBoundingBox()) && proto.mediapipe.LocationData.BoundingBox.toObject(includeInstance, f),
    relativeBoundingBox: (f = msg.getRelativeBoundingBox()) && proto.mediapipe.LocationData.RelativeBoundingBox.toObject(includeInstance, f),
    mask: (f = msg.getMask()) && proto.mediapipe.LocationData.BinaryMask.toObject(includeInstance, f),
    relativeKeypointsList: jspb.Message.toObjectList(msg.getRelativeKeypointsList(),
    proto.mediapipe.LocationData.RelativeKeypoint.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mediapipe.LocationData}
 */
proto.mediapipe.LocationData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mediapipe.LocationData;
  return proto.mediapipe.LocationData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mediapipe.LocationData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mediapipe.LocationData}
 */
proto.mediapipe.LocationData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mediapipe.LocationData.Format} */ (reader.readEnum());
      msg.setFormat(value);
      break;
    case 2:
      var value = new proto.mediapipe.LocationData.BoundingBox;
      reader.readMessage(value,proto.mediapipe.LocationData.BoundingBox.deserializeBinaryFromReader);
      msg.setBoundingBox(value);
      break;
    case 3:
      var value = new proto.mediapipe.LocationData.RelativeBoundingBox;
      reader.readMessage(value,proto.mediapipe.LocationData.RelativeBoundingBox.deserializeBinaryFromReader);
      msg.setRelativeBoundingBox(value);
      break;
    case 4:
      var value = new proto.mediapipe.LocationData.BinaryMask;
      reader.readMessage(value,proto.mediapipe.LocationData.BinaryMask.deserializeBinaryFromReader);
      msg.setMask(value);
      break;
    case 5:
      var value = new proto.mediapipe.LocationData.RelativeKeypoint;
      reader.readMessage(value,proto.mediapipe.LocationData.RelativeKeypoint.deserializeBinaryFromReader);
      msg.addRelativeKeypoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mediapipe.LocationData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mediapipe.LocationData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mediapipe.LocationData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.LocationData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.mediapipe.LocationData.Format} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getBoundingBox();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mediapipe.LocationData.BoundingBox.serializeBinaryToWriter
    );
  }
  f = message.getRelativeBoundingBox();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.mediapipe.LocationData.RelativeBoundingBox.serializeBinaryToWriter
    );
  }
  f = message.getMask();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.mediapipe.LocationData.BinaryMask.serializeBinaryToWriter
    );
  }
  f = message.getRelativeKeypointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.mediapipe.LocationData.RelativeKeypoint.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.mediapipe.LocationData.Format = {
  GLOBAL: 0,
  BOUNDING_BOX: 1,
  RELATIVE_BOUNDING_BOX: 2,
  MASK: 3
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mediapipe.LocationData.BoundingBox.prototype.toObject = function(opt_includeInstance) {
  return proto.mediapipe.LocationData.BoundingBox.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mediapipe.LocationData.BoundingBox} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.LocationData.BoundingBox.toObject = function(includeInstance, msg) {
  var f, obj = {
    xmin: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    ymin: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    width: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    height: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mediapipe.LocationData.BoundingBox}
 */
proto.mediapipe.LocationData.BoundingBox.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mediapipe.LocationData.BoundingBox;
  return proto.mediapipe.LocationData.BoundingBox.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mediapipe.LocationData.BoundingBox} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mediapipe.LocationData.BoundingBox}
 */
proto.mediapipe.LocationData.BoundingBox.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setXmin(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setYmin(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWidth(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mediapipe.LocationData.BoundingBox.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mediapipe.LocationData.BoundingBox.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mediapipe.LocationData.BoundingBox} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.LocationData.BoundingBox.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 xmin = 1;
 * @return {number}
 */
proto.mediapipe.LocationData.BoundingBox.prototype.getXmin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.LocationData.BoundingBox} returns this
 */
proto.mediapipe.LocationData.BoundingBox.prototype.setXmin = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mediapipe.LocationData.BoundingBox} returns this
 */
proto.mediapipe.LocationData.BoundingBox.prototype.clearXmin = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.LocationData.BoundingBox.prototype.hasXmin = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 ymin = 2;
 * @return {number}
 */
proto.mediapipe.LocationData.BoundingBox.prototype.getYmin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.LocationData.BoundingBox} returns this
 */
proto.mediapipe.LocationData.BoundingBox.prototype.setYmin = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mediapipe.LocationData.BoundingBox} returns this
 */
proto.mediapipe.LocationData.BoundingBox.prototype.clearYmin = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.LocationData.BoundingBox.prototype.hasYmin = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 width = 3;
 * @return {number}
 */
proto.mediapipe.LocationData.BoundingBox.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.LocationData.BoundingBox} returns this
 */
proto.mediapipe.LocationData.BoundingBox.prototype.setWidth = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mediapipe.LocationData.BoundingBox} returns this
 */
proto.mediapipe.LocationData.BoundingBox.prototype.clearWidth = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.LocationData.BoundingBox.prototype.hasWidth = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 height = 4;
 * @return {number}
 */
proto.mediapipe.LocationData.BoundingBox.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.LocationData.BoundingBox} returns this
 */
proto.mediapipe.LocationData.BoundingBox.prototype.setHeight = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mediapipe.LocationData.BoundingBox} returns this
 */
proto.mediapipe.LocationData.BoundingBox.prototype.clearHeight = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.LocationData.BoundingBox.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mediapipe.LocationData.RelativeBoundingBox.prototype.toObject = function(opt_includeInstance) {
  return proto.mediapipe.LocationData.RelativeBoundingBox.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mediapipe.LocationData.RelativeBoundingBox} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.LocationData.RelativeBoundingBox.toObject = function(includeInstance, msg) {
  var f, obj = {
    xmin: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    ymin: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    width: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    height: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mediapipe.LocationData.RelativeBoundingBox}
 */
proto.mediapipe.LocationData.RelativeBoundingBox.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mediapipe.LocationData.RelativeBoundingBox;
  return proto.mediapipe.LocationData.RelativeBoundingBox.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mediapipe.LocationData.RelativeBoundingBox} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mediapipe.LocationData.RelativeBoundingBox}
 */
proto.mediapipe.LocationData.RelativeBoundingBox.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setXmin(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setYmin(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWidth(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mediapipe.LocationData.RelativeBoundingBox.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mediapipe.LocationData.RelativeBoundingBox.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mediapipe.LocationData.RelativeBoundingBox} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.LocationData.RelativeBoundingBox.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeFloat(
      4,
      f
    );
  }
};


/**
 * optional float xmin = 1;
 * @return {number}
 */
proto.mediapipe.LocationData.RelativeBoundingBox.prototype.getXmin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.LocationData.RelativeBoundingBox} returns this
 */
proto.mediapipe.LocationData.RelativeBoundingBox.prototype.setXmin = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mediapipe.LocationData.RelativeBoundingBox} returns this
 */
proto.mediapipe.LocationData.RelativeBoundingBox.prototype.clearXmin = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.LocationData.RelativeBoundingBox.prototype.hasXmin = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float ymin = 2;
 * @return {number}
 */
proto.mediapipe.LocationData.RelativeBoundingBox.prototype.getYmin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.LocationData.RelativeBoundingBox} returns this
 */
proto.mediapipe.LocationData.RelativeBoundingBox.prototype.setYmin = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mediapipe.LocationData.RelativeBoundingBox} returns this
 */
proto.mediapipe.LocationData.RelativeBoundingBox.prototype.clearYmin = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.LocationData.RelativeBoundingBox.prototype.hasYmin = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float width = 3;
 * @return {number}
 */
proto.mediapipe.LocationData.RelativeBoundingBox.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.LocationData.RelativeBoundingBox} returns this
 */
proto.mediapipe.LocationData.RelativeBoundingBox.prototype.setWidth = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mediapipe.LocationData.RelativeBoundingBox} returns this
 */
proto.mediapipe.LocationData.RelativeBoundingBox.prototype.clearWidth = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.LocationData.RelativeBoundingBox.prototype.hasWidth = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float height = 4;
 * @return {number}
 */
proto.mediapipe.LocationData.RelativeBoundingBox.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.LocationData.RelativeBoundingBox} returns this
 */
proto.mediapipe.LocationData.RelativeBoundingBox.prototype.setHeight = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mediapipe.LocationData.RelativeBoundingBox} returns this
 */
proto.mediapipe.LocationData.RelativeBoundingBox.prototype.clearHeight = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.LocationData.RelativeBoundingBox.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mediapipe.LocationData.BinaryMask.prototype.toObject = function(opt_includeInstance) {
  return proto.mediapipe.LocationData.BinaryMask.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mediapipe.LocationData.BinaryMask} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.LocationData.BinaryMask.toObject = function(includeInstance, msg) {
  var f, obj = {
    width: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    height: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    rasterization: (f = msg.getRasterization()) && mediapipe_framework_formats_annotation_rasterization_pb.Rasterization.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mediapipe.LocationData.BinaryMask}
 */
proto.mediapipe.LocationData.BinaryMask.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mediapipe.LocationData.BinaryMask;
  return proto.mediapipe.LocationData.BinaryMask.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mediapipe.LocationData.BinaryMask} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mediapipe.LocationData.BinaryMask}
 */
proto.mediapipe.LocationData.BinaryMask.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWidth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    case 3:
      var value = new mediapipe_framework_formats_annotation_rasterization_pb.Rasterization;
      reader.readMessage(value,mediapipe_framework_formats_annotation_rasterization_pb.Rasterization.deserializeBinaryFromReader);
      msg.setRasterization(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mediapipe.LocationData.BinaryMask.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mediapipe.LocationData.BinaryMask.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mediapipe.LocationData.BinaryMask} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.LocationData.BinaryMask.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getRasterization();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      mediapipe_framework_formats_annotation_rasterization_pb.Rasterization.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 width = 1;
 * @return {number}
 */
proto.mediapipe.LocationData.BinaryMask.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.LocationData.BinaryMask} returns this
 */
proto.mediapipe.LocationData.BinaryMask.prototype.setWidth = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mediapipe.LocationData.BinaryMask} returns this
 */
proto.mediapipe.LocationData.BinaryMask.prototype.clearWidth = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.LocationData.BinaryMask.prototype.hasWidth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 height = 2;
 * @return {number}
 */
proto.mediapipe.LocationData.BinaryMask.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.LocationData.BinaryMask} returns this
 */
proto.mediapipe.LocationData.BinaryMask.prototype.setHeight = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mediapipe.LocationData.BinaryMask} returns this
 */
proto.mediapipe.LocationData.BinaryMask.prototype.clearHeight = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.LocationData.BinaryMask.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Rasterization rasterization = 3;
 * @return {?proto.mediapipe.Rasterization}
 */
proto.mediapipe.LocationData.BinaryMask.prototype.getRasterization = function() {
  return /** @type{?proto.mediapipe.Rasterization} */ (
    jspb.Message.getWrapperField(this, mediapipe_framework_formats_annotation_rasterization_pb.Rasterization, 3));
};


/**
 * @param {?proto.mediapipe.Rasterization|undefined} value
 * @return {!proto.mediapipe.LocationData.BinaryMask} returns this
*/
proto.mediapipe.LocationData.BinaryMask.prototype.setRasterization = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mediapipe.LocationData.BinaryMask} returns this
 */
proto.mediapipe.LocationData.BinaryMask.prototype.clearRasterization = function() {
  return this.setRasterization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.LocationData.BinaryMask.prototype.hasRasterization = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mediapipe.LocationData.RelativeKeypoint.prototype.toObject = function(opt_includeInstance) {
  return proto.mediapipe.LocationData.RelativeKeypoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mediapipe.LocationData.RelativeKeypoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.LocationData.RelativeKeypoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    y: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    keypointLabel: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    score: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mediapipe.LocationData.RelativeKeypoint}
 */
proto.mediapipe.LocationData.RelativeKeypoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mediapipe.LocationData.RelativeKeypoint;
  return proto.mediapipe.LocationData.RelativeKeypoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mediapipe.LocationData.RelativeKeypoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mediapipe.LocationData.RelativeKeypoint}
 */
proto.mediapipe.LocationData.RelativeKeypoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeypointLabel(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mediapipe.LocationData.RelativeKeypoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mediapipe.LocationData.RelativeKeypoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mediapipe.LocationData.RelativeKeypoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.LocationData.RelativeKeypoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeFloat(
      4,
      f
    );
  }
};


/**
 * optional float x = 1;
 * @return {number}
 */
proto.mediapipe.LocationData.RelativeKeypoint.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.LocationData.RelativeKeypoint} returns this
 */
proto.mediapipe.LocationData.RelativeKeypoint.prototype.setX = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mediapipe.LocationData.RelativeKeypoint} returns this
 */
proto.mediapipe.LocationData.RelativeKeypoint.prototype.clearX = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.LocationData.RelativeKeypoint.prototype.hasX = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float y = 2;
 * @return {number}
 */
proto.mediapipe.LocationData.RelativeKeypoint.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.LocationData.RelativeKeypoint} returns this
 */
proto.mediapipe.LocationData.RelativeKeypoint.prototype.setY = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mediapipe.LocationData.RelativeKeypoint} returns this
 */
proto.mediapipe.LocationData.RelativeKeypoint.prototype.clearY = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.LocationData.RelativeKeypoint.prototype.hasY = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string keypoint_label = 3;
 * @return {string}
 */
proto.mediapipe.LocationData.RelativeKeypoint.prototype.getKeypointLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mediapipe.LocationData.RelativeKeypoint} returns this
 */
proto.mediapipe.LocationData.RelativeKeypoint.prototype.setKeypointLabel = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mediapipe.LocationData.RelativeKeypoint} returns this
 */
proto.mediapipe.LocationData.RelativeKeypoint.prototype.clearKeypointLabel = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.LocationData.RelativeKeypoint.prototype.hasKeypointLabel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float score = 4;
 * @return {number}
 */
proto.mediapipe.LocationData.RelativeKeypoint.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.LocationData.RelativeKeypoint} returns this
 */
proto.mediapipe.LocationData.RelativeKeypoint.prototype.setScore = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mediapipe.LocationData.RelativeKeypoint} returns this
 */
proto.mediapipe.LocationData.RelativeKeypoint.prototype.clearScore = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.LocationData.RelativeKeypoint.prototype.hasScore = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Format format = 1;
 * @return {!proto.mediapipe.LocationData.Format}
 */
proto.mediapipe.LocationData.prototype.getFormat = function() {
  return /** @type {!proto.mediapipe.LocationData.Format} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mediapipe.LocationData.Format} value
 * @return {!proto.mediapipe.LocationData} returns this
 */
proto.mediapipe.LocationData.prototype.setFormat = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mediapipe.LocationData} returns this
 */
proto.mediapipe.LocationData.prototype.clearFormat = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.LocationData.prototype.hasFormat = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BoundingBox bounding_box = 2;
 * @return {?proto.mediapipe.LocationData.BoundingBox}
 */
proto.mediapipe.LocationData.prototype.getBoundingBox = function() {
  return /** @type{?proto.mediapipe.LocationData.BoundingBox} */ (
    jspb.Message.getWrapperField(this, proto.mediapipe.LocationData.BoundingBox, 2));
};


/**
 * @param {?proto.mediapipe.LocationData.BoundingBox|undefined} value
 * @return {!proto.mediapipe.LocationData} returns this
*/
proto.mediapipe.LocationData.prototype.setBoundingBox = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mediapipe.LocationData} returns this
 */
proto.mediapipe.LocationData.prototype.clearBoundingBox = function() {
  return this.setBoundingBox(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.LocationData.prototype.hasBoundingBox = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RelativeBoundingBox relative_bounding_box = 3;
 * @return {?proto.mediapipe.LocationData.RelativeBoundingBox}
 */
proto.mediapipe.LocationData.prototype.getRelativeBoundingBox = function() {
  return /** @type{?proto.mediapipe.LocationData.RelativeBoundingBox} */ (
    jspb.Message.getWrapperField(this, proto.mediapipe.LocationData.RelativeBoundingBox, 3));
};


/**
 * @param {?proto.mediapipe.LocationData.RelativeBoundingBox|undefined} value
 * @return {!proto.mediapipe.LocationData} returns this
*/
proto.mediapipe.LocationData.prototype.setRelativeBoundingBox = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mediapipe.LocationData} returns this
 */
proto.mediapipe.LocationData.prototype.clearRelativeBoundingBox = function() {
  return this.setRelativeBoundingBox(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.LocationData.prototype.hasRelativeBoundingBox = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BinaryMask mask = 4;
 * @return {?proto.mediapipe.LocationData.BinaryMask}
 */
proto.mediapipe.LocationData.prototype.getMask = function() {
  return /** @type{?proto.mediapipe.LocationData.BinaryMask} */ (
    jspb.Message.getWrapperField(this, proto.mediapipe.LocationData.BinaryMask, 4));
};


/**
 * @param {?proto.mediapipe.LocationData.BinaryMask|undefined} value
 * @return {!proto.mediapipe.LocationData} returns this
*/
proto.mediapipe.LocationData.prototype.setMask = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mediapipe.LocationData} returns this
 */
proto.mediapipe.LocationData.prototype.clearMask = function() {
  return this.setMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.LocationData.prototype.hasMask = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated RelativeKeypoint relative_keypoints = 5;
 * @return {!Array<!proto.mediapipe.LocationData.RelativeKeypoint>}
 */
proto.mediapipe.LocationData.prototype.getRelativeKeypointsList = function() {
  return /** @type{!Array<!proto.mediapipe.LocationData.RelativeKeypoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mediapipe.LocationData.RelativeKeypoint, 5));
};


/**
 * @param {!Array<!proto.mediapipe.LocationData.RelativeKeypoint>} value
 * @return {!proto.mediapipe.LocationData} returns this
*/
proto.mediapipe.LocationData.prototype.setRelativeKeypointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.mediapipe.LocationData.RelativeKeypoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mediapipe.LocationData.RelativeKeypoint}
 */
proto.mediapipe.LocationData.prototype.addRelativeKeypoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.mediapipe.LocationData.RelativeKeypoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.LocationData} returns this
 */
proto.mediapipe.LocationData.prototype.clearRelativeKeypointsList = function() {
  return this.setRelativeKeypointsList([]);
};


goog.object.extend(exports, proto.mediapipe);

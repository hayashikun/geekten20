// source: mediapipe/framework/calculator.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var mediapipe_framework_calculator_options_pb = require('../../mediapipe/framework/calculator_options_pb.js');
goog.object.extend(proto, mediapipe_framework_calculator_options_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var mediapipe_framework_mediapipe_options_pb = require('../../mediapipe/framework/mediapipe_options_pb.js');
goog.object.extend(proto, mediapipe_framework_mediapipe_options_pb);
var mediapipe_framework_packet_factory_pb = require('../../mediapipe/framework/packet_factory_pb.js');
goog.object.extend(proto, mediapipe_framework_packet_factory_pb);
var mediapipe_framework_packet_generator_pb = require('../../mediapipe/framework/packet_generator_pb.js');
goog.object.extend(proto, mediapipe_framework_packet_generator_pb);
var mediapipe_framework_status_handler_pb = require('../../mediapipe/framework/status_handler_pb.js');
goog.object.extend(proto, mediapipe_framework_status_handler_pb);
var mediapipe_framework_stream_handler_pb = require('../../mediapipe/framework/stream_handler_pb.js');
goog.object.extend(proto, mediapipe_framework_stream_handler_pb);
goog.exportSymbol('proto.mediapipe.CalculatorGraphConfig', null, global);
goog.exportSymbol('proto.mediapipe.CalculatorGraphConfig.Node', null, global);
goog.exportSymbol('proto.mediapipe.ExecutorConfig', null, global);
goog.exportSymbol('proto.mediapipe.InputCollection', null, global);
goog.exportSymbol('proto.mediapipe.InputCollection.InputType', null, global);
goog.exportSymbol('proto.mediapipe.InputCollectionSet', null, global);
goog.exportSymbol('proto.mediapipe.InputStreamInfo', null, global);
goog.exportSymbol('proto.mediapipe.ProfilerConfig', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mediapipe.ExecutorConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mediapipe.ExecutorConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mediapipe.ExecutorConfig.displayName = 'proto.mediapipe.ExecutorConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mediapipe.InputCollection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, proto.mediapipe.InputCollection.repeatedFields_, null);
};
goog.inherits(proto.mediapipe.InputCollection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mediapipe.InputCollection.displayName = 'proto.mediapipe.InputCollection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mediapipe.InputCollectionSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mediapipe.InputCollectionSet.repeatedFields_, null);
};
goog.inherits(proto.mediapipe.InputCollectionSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mediapipe.InputCollectionSet.displayName = 'proto.mediapipe.InputCollectionSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mediapipe.InputStreamInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mediapipe.InputStreamInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mediapipe.InputStreamInfo.displayName = 'proto.mediapipe.InputStreamInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mediapipe.ProfilerConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mediapipe.ProfilerConfig.repeatedFields_, null);
};
goog.inherits(proto.mediapipe.ProfilerConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mediapipe.ProfilerConfig.displayName = 'proto.mediapipe.ProfilerConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mediapipe.CalculatorGraphConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, proto.mediapipe.CalculatorGraphConfig.repeatedFields_, null);
};
goog.inherits(proto.mediapipe.CalculatorGraphConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mediapipe.CalculatorGraphConfig.displayName = 'proto.mediapipe.CalculatorGraphConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mediapipe.CalculatorGraphConfig.Node = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, proto.mediapipe.CalculatorGraphConfig.Node.repeatedFields_, null);
};
goog.inherits(proto.mediapipe.CalculatorGraphConfig.Node, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mediapipe.CalculatorGraphConfig.Node.displayName = 'proto.mediapipe.CalculatorGraphConfig.Node';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mediapipe.ExecutorConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.mediapipe.ExecutorConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mediapipe.ExecutorConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.ExecutorConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    options: (f = msg.getOptions()) && mediapipe_framework_mediapipe_options_pb.MediaPipeOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mediapipe.ExecutorConfig}
 */
proto.mediapipe.ExecutorConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mediapipe.ExecutorConfig;
  return proto.mediapipe.ExecutorConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mediapipe.ExecutorConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mediapipe.ExecutorConfig}
 */
proto.mediapipe.ExecutorConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = new mediapipe_framework_mediapipe_options_pb.MediaPipeOptions;
      reader.readMessage(value,mediapipe_framework_mediapipe_options_pb.MediaPipeOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mediapipe.ExecutorConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mediapipe.ExecutorConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mediapipe.ExecutorConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.ExecutorConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      mediapipe_framework_mediapipe_options_pb.MediaPipeOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.mediapipe.ExecutorConfig.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mediapipe.ExecutorConfig} returns this
 */
proto.mediapipe.ExecutorConfig.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.mediapipe.ExecutorConfig.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mediapipe.ExecutorConfig} returns this
 */
proto.mediapipe.ExecutorConfig.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional MediaPipeOptions options = 3;
 * @return {?proto.mediapipe.MediaPipeOptions}
 */
proto.mediapipe.ExecutorConfig.prototype.getOptions = function() {
  return /** @type{?proto.mediapipe.MediaPipeOptions} */ (
    jspb.Message.getWrapperField(this, mediapipe_framework_mediapipe_options_pb.MediaPipeOptions, 3));
};


/**
 * @param {?proto.mediapipe.MediaPipeOptions|undefined} value
 * @return {!proto.mediapipe.ExecutorConfig} returns this
*/
proto.mediapipe.ExecutorConfig.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mediapipe.ExecutorConfig} returns this
 */
proto.mediapipe.ExecutorConfig.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.ExecutorConfig.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mediapipe.InputCollection.repeatedFields_ = [2,1002];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mediapipe.InputCollection.prototype.toObject = function(opt_includeInstance) {
  return proto.mediapipe.InputCollection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mediapipe.InputCollection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.InputCollection.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sidePacketNameList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    externalInputNameList: (f = jspb.Message.getRepeatedField(msg, 1002)) == null ? undefined : f,
    inputType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    fileName: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mediapipe.InputCollection}
 */
proto.mediapipe.InputCollection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mediapipe.InputCollection;
  return proto.mediapipe.InputCollection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mediapipe.InputCollection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mediapipe.InputCollection}
 */
proto.mediapipe.InputCollection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSidePacketName(value);
      break;
    case 1002:
      var value = /** @type {string} */ (reader.readString());
      msg.addExternalInputName(value);
      break;
    case 3:
      var value = /** @type {!proto.mediapipe.InputCollection.InputType} */ (reader.readEnum());
      msg.setInputType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mediapipe.InputCollection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mediapipe.InputCollection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mediapipe.InputCollection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.InputCollection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSidePacketNameList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getExternalInputNameList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1002,
      f
    );
  }
  f = message.getInputType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mediapipe.InputCollection.InputType = {
  UNKNOWN: 0,
  RECORDIO: 1,
  FOREIGN_RECORDIO: 2,
  FOREIGN_CSV_TEXT: 3,
  INVALID_UPPER_BOUND: 4
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.mediapipe.InputCollection.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mediapipe.InputCollection} returns this
 */
proto.mediapipe.InputCollection.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string side_packet_name = 2;
 * @return {!Array<string>}
 */
proto.mediapipe.InputCollection.prototype.getSidePacketNameList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mediapipe.InputCollection} returns this
 */
proto.mediapipe.InputCollection.prototype.setSidePacketNameList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mediapipe.InputCollection} returns this
 */
proto.mediapipe.InputCollection.prototype.addSidePacketName = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.InputCollection} returns this
 */
proto.mediapipe.InputCollection.prototype.clearSidePacketNameList = function() {
  return this.setSidePacketNameList([]);
};


/**
 * repeated string external_input_name = 1002;
 * @return {!Array<string>}
 */
proto.mediapipe.InputCollection.prototype.getExternalInputNameList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1002));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mediapipe.InputCollection} returns this
 */
proto.mediapipe.InputCollection.prototype.setExternalInputNameList = function(value) {
  return jspb.Message.setField(this, 1002, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mediapipe.InputCollection} returns this
 */
proto.mediapipe.InputCollection.prototype.addExternalInputName = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1002, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.InputCollection} returns this
 */
proto.mediapipe.InputCollection.prototype.clearExternalInputNameList = function() {
  return this.setExternalInputNameList([]);
};


/**
 * optional InputType input_type = 3;
 * @return {!proto.mediapipe.InputCollection.InputType}
 */
proto.mediapipe.InputCollection.prototype.getInputType = function() {
  return /** @type {!proto.mediapipe.InputCollection.InputType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.mediapipe.InputCollection.InputType} value
 * @return {!proto.mediapipe.InputCollection} returns this
 */
proto.mediapipe.InputCollection.prototype.setInputType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string file_name = 4;
 * @return {string}
 */
proto.mediapipe.InputCollection.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.mediapipe.InputCollection} returns this
 */
proto.mediapipe.InputCollection.prototype.setFileName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mediapipe.InputCollectionSet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mediapipe.InputCollectionSet.prototype.toObject = function(opt_includeInstance) {
  return proto.mediapipe.InputCollectionSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mediapipe.InputCollectionSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.InputCollectionSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    inputCollectionList: jspb.Message.toObjectList(msg.getInputCollectionList(),
    proto.mediapipe.InputCollection.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mediapipe.InputCollectionSet}
 */
proto.mediapipe.InputCollectionSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mediapipe.InputCollectionSet;
  return proto.mediapipe.InputCollectionSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mediapipe.InputCollectionSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mediapipe.InputCollectionSet}
 */
proto.mediapipe.InputCollectionSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mediapipe.InputCollection;
      reader.readMessage(value,proto.mediapipe.InputCollection.deserializeBinaryFromReader);
      msg.addInputCollection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mediapipe.InputCollectionSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mediapipe.InputCollectionSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mediapipe.InputCollectionSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.InputCollectionSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInputCollectionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mediapipe.InputCollection.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InputCollection input_collection = 1;
 * @return {!Array<!proto.mediapipe.InputCollection>}
 */
proto.mediapipe.InputCollectionSet.prototype.getInputCollectionList = function() {
  return /** @type{!Array<!proto.mediapipe.InputCollection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mediapipe.InputCollection, 1));
};


/**
 * @param {!Array<!proto.mediapipe.InputCollection>} value
 * @return {!proto.mediapipe.InputCollectionSet} returns this
*/
proto.mediapipe.InputCollectionSet.prototype.setInputCollectionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mediapipe.InputCollection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mediapipe.InputCollection}
 */
proto.mediapipe.InputCollectionSet.prototype.addInputCollection = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mediapipe.InputCollection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.InputCollectionSet} returns this
 */
proto.mediapipe.InputCollectionSet.prototype.clearInputCollectionList = function() {
  return this.setInputCollectionList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mediapipe.InputStreamInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.mediapipe.InputStreamInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mediapipe.InputStreamInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.InputStreamInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    tagIndex: jspb.Message.getFieldWithDefault(msg, 1, ""),
    backEdge: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mediapipe.InputStreamInfo}
 */
proto.mediapipe.InputStreamInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mediapipe.InputStreamInfo;
  return proto.mediapipe.InputStreamInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mediapipe.InputStreamInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mediapipe.InputStreamInfo}
 */
proto.mediapipe.InputStreamInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTagIndex(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBackEdge(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mediapipe.InputStreamInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mediapipe.InputStreamInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mediapipe.InputStreamInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.InputStreamInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTagIndex();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBackEdge();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string tag_index = 1;
 * @return {string}
 */
proto.mediapipe.InputStreamInfo.prototype.getTagIndex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mediapipe.InputStreamInfo} returns this
 */
proto.mediapipe.InputStreamInfo.prototype.setTagIndex = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool back_edge = 2;
 * @return {boolean}
 */
proto.mediapipe.InputStreamInfo.prototype.getBackEdge = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mediapipe.InputStreamInfo} returns this
 */
proto.mediapipe.InputStreamInfo.prototype.setBackEdge = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mediapipe.ProfilerConfig.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mediapipe.ProfilerConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.mediapipe.ProfilerConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mediapipe.ProfilerConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.ProfilerConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    histogramIntervalSizeUsec: jspb.Message.getFieldWithDefault(msg, 1, 0),
    numHistogramIntervals: jspb.Message.getFieldWithDefault(msg, 2, 0),
    enableInputOutputLatency: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    enableProfiler: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    enableStreamLatency: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    usePacketTimestampForAddedPacket: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    traceLogCapacity: jspb.Message.getFieldWithDefault(msg, 7, 0),
    traceEventTypesDisabledList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    traceLogPath: jspb.Message.getFieldWithDefault(msg, 9, ""),
    traceLogCount: jspb.Message.getFieldWithDefault(msg, 10, 0),
    traceLogIntervalUsec: jspb.Message.getFieldWithDefault(msg, 11, 0),
    traceLogMarginUsec: jspb.Message.getFieldWithDefault(msg, 12, 0),
    traceLogDurationEvents: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    traceLogIntervalCount: jspb.Message.getFieldWithDefault(msg, 14, 0),
    traceLogDisabled: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    traceEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    traceLogInstantEvents: jspb.Message.getBooleanFieldWithDefault(msg, 17, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mediapipe.ProfilerConfig}
 */
proto.mediapipe.ProfilerConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mediapipe.ProfilerConfig;
  return proto.mediapipe.ProfilerConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mediapipe.ProfilerConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mediapipe.ProfilerConfig}
 */
proto.mediapipe.ProfilerConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHistogramIntervalSizeUsec(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumHistogramIntervals(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableInputOutputLatency(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableProfiler(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableStreamLatency(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUsePacketTimestampForAddedPacket(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTraceLogCapacity(value);
      break;
    case 8:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setTraceEventTypesDisabledList(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraceLogPath(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTraceLogCount(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTraceLogIntervalUsec(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTraceLogMarginUsec(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTraceLogDurationEvents(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTraceLogIntervalCount(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTraceLogDisabled(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTraceEnabled(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTraceLogInstantEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mediapipe.ProfilerConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mediapipe.ProfilerConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mediapipe.ProfilerConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.ProfilerConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHistogramIntervalSizeUsec();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNumHistogramIntervals();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEnableInputOutputLatency();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getEnableProfiler();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getEnableStreamLatency();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getUsePacketTimestampForAddedPacket();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getTraceLogCapacity();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getTraceEventTypesDisabledList();
  if (f.length > 0) {
    writer.writePackedInt32(
      8,
      f
    );
  }
  f = message.getTraceLogPath();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTraceLogCount();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getTraceLogIntervalUsec();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getTraceLogMarginUsec();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getTraceLogDurationEvents();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getTraceLogIntervalCount();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getTraceLogDisabled();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getTraceEnabled();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getTraceLogInstantEvents();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
};


/**
 * optional int64 histogram_interval_size_usec = 1;
 * @return {number}
 */
proto.mediapipe.ProfilerConfig.prototype.getHistogramIntervalSizeUsec = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.ProfilerConfig} returns this
 */
proto.mediapipe.ProfilerConfig.prototype.setHistogramIntervalSizeUsec = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 num_histogram_intervals = 2;
 * @return {number}
 */
proto.mediapipe.ProfilerConfig.prototype.getNumHistogramIntervals = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.ProfilerConfig} returns this
 */
proto.mediapipe.ProfilerConfig.prototype.setNumHistogramIntervals = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool enable_input_output_latency = 3;
 * @return {boolean}
 */
proto.mediapipe.ProfilerConfig.prototype.getEnableInputOutputLatency = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mediapipe.ProfilerConfig} returns this
 */
proto.mediapipe.ProfilerConfig.prototype.setEnableInputOutputLatency = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool enable_profiler = 4;
 * @return {boolean}
 */
proto.mediapipe.ProfilerConfig.prototype.getEnableProfiler = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mediapipe.ProfilerConfig} returns this
 */
proto.mediapipe.ProfilerConfig.prototype.setEnableProfiler = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool enable_stream_latency = 5;
 * @return {boolean}
 */
proto.mediapipe.ProfilerConfig.prototype.getEnableStreamLatency = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mediapipe.ProfilerConfig} returns this
 */
proto.mediapipe.ProfilerConfig.prototype.setEnableStreamLatency = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool use_packet_timestamp_for_added_packet = 6;
 * @return {boolean}
 */
proto.mediapipe.ProfilerConfig.prototype.getUsePacketTimestampForAddedPacket = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mediapipe.ProfilerConfig} returns this
 */
proto.mediapipe.ProfilerConfig.prototype.setUsePacketTimestampForAddedPacket = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional int64 trace_log_capacity = 7;
 * @return {number}
 */
proto.mediapipe.ProfilerConfig.prototype.getTraceLogCapacity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.ProfilerConfig} returns this
 */
proto.mediapipe.ProfilerConfig.prototype.setTraceLogCapacity = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated int32 trace_event_types_disabled = 8;
 * @return {!Array<number>}
 */
proto.mediapipe.ProfilerConfig.prototype.getTraceEventTypesDisabledList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.mediapipe.ProfilerConfig} returns this
 */
proto.mediapipe.ProfilerConfig.prototype.setTraceEventTypesDisabledList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.mediapipe.ProfilerConfig} returns this
 */
proto.mediapipe.ProfilerConfig.prototype.addTraceEventTypesDisabled = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.ProfilerConfig} returns this
 */
proto.mediapipe.ProfilerConfig.prototype.clearTraceEventTypesDisabledList = function() {
  return this.setTraceEventTypesDisabledList([]);
};


/**
 * optional string trace_log_path = 9;
 * @return {string}
 */
proto.mediapipe.ProfilerConfig.prototype.getTraceLogPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.mediapipe.ProfilerConfig} returns this
 */
proto.mediapipe.ProfilerConfig.prototype.setTraceLogPath = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 trace_log_count = 10;
 * @return {number}
 */
proto.mediapipe.ProfilerConfig.prototype.getTraceLogCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.ProfilerConfig} returns this
 */
proto.mediapipe.ProfilerConfig.prototype.setTraceLogCount = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 trace_log_interval_usec = 11;
 * @return {number}
 */
proto.mediapipe.ProfilerConfig.prototype.getTraceLogIntervalUsec = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.ProfilerConfig} returns this
 */
proto.mediapipe.ProfilerConfig.prototype.setTraceLogIntervalUsec = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 trace_log_margin_usec = 12;
 * @return {number}
 */
proto.mediapipe.ProfilerConfig.prototype.getTraceLogMarginUsec = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.ProfilerConfig} returns this
 */
proto.mediapipe.ProfilerConfig.prototype.setTraceLogMarginUsec = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional bool trace_log_duration_events = 13;
 * @return {boolean}
 */
proto.mediapipe.ProfilerConfig.prototype.getTraceLogDurationEvents = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mediapipe.ProfilerConfig} returns this
 */
proto.mediapipe.ProfilerConfig.prototype.setTraceLogDurationEvents = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional int32 trace_log_interval_count = 14;
 * @return {number}
 */
proto.mediapipe.ProfilerConfig.prototype.getTraceLogIntervalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.ProfilerConfig} returns this
 */
proto.mediapipe.ProfilerConfig.prototype.setTraceLogIntervalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional bool trace_log_disabled = 15;
 * @return {boolean}
 */
proto.mediapipe.ProfilerConfig.prototype.getTraceLogDisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mediapipe.ProfilerConfig} returns this
 */
proto.mediapipe.ProfilerConfig.prototype.setTraceLogDisabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool trace_enabled = 16;
 * @return {boolean}
 */
proto.mediapipe.ProfilerConfig.prototype.getTraceEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mediapipe.ProfilerConfig} returns this
 */
proto.mediapipe.ProfilerConfig.prototype.setTraceEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool trace_log_instant_events = 17;
 * @return {boolean}
 */
proto.mediapipe.ProfilerConfig.prototype.getTraceLogInstantEvents = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mediapipe.ProfilerConfig} returns this
 */
proto.mediapipe.ProfilerConfig.prototype.setTraceLogInstantEvents = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mediapipe.CalculatorGraphConfig.repeatedFields_ = [1,6,7,9,10,15,16,17,14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.mediapipe.CalculatorGraphConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mediapipe.CalculatorGraphConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.CalculatorGraphConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeList: jspb.Message.toObjectList(msg.getNodeList(),
    proto.mediapipe.CalculatorGraphConfig.Node.toObject, includeInstance),
    packetFactoryList: jspb.Message.toObjectList(msg.getPacketFactoryList(),
    mediapipe_framework_packet_factory_pb.PacketFactoryConfig.toObject, includeInstance),
    packetGeneratorList: jspb.Message.toObjectList(msg.getPacketGeneratorList(),
    mediapipe_framework_packet_generator_pb.PacketGeneratorConfig.toObject, includeInstance),
    numThreads: jspb.Message.getFieldWithDefault(msg, 8, 0),
    statusHandlerList: jspb.Message.toObjectList(msg.getStatusHandlerList(),
    mediapipe_framework_status_handler_pb.StatusHandlerConfig.toObject, includeInstance),
    inputStreamList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    outputStreamList: (f = jspb.Message.getRepeatedField(msg, 15)) == null ? undefined : f,
    inputSidePacketList: (f = jspb.Message.getRepeatedField(msg, 16)) == null ? undefined : f,
    outputSidePacketList: (f = jspb.Message.getRepeatedField(msg, 17)) == null ? undefined : f,
    maxQueueSize: jspb.Message.getFieldWithDefault(msg, 11, 0),
    reportDeadlock: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    inputStreamHandler: (f = msg.getInputStreamHandler()) && mediapipe_framework_stream_handler_pb.InputStreamHandlerConfig.toObject(includeInstance, f),
    outputStreamHandler: (f = msg.getOutputStreamHandler()) && mediapipe_framework_stream_handler_pb.OutputStreamHandlerConfig.toObject(includeInstance, f),
    executorList: jspb.Message.toObjectList(msg.getExecutorList(),
    proto.mediapipe.ExecutorConfig.toObject, includeInstance),
    profilerConfig: (f = msg.getProfilerConfig()) && proto.mediapipe.ProfilerConfig.toObject(includeInstance, f),
    pb_package: jspb.Message.getFieldWithDefault(msg, 19, ""),
    type: jspb.Message.getFieldWithDefault(msg, 20, ""),
    options: (f = msg.getOptions()) && mediapipe_framework_mediapipe_options_pb.MediaPipeOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mediapipe.CalculatorGraphConfig}
 */
proto.mediapipe.CalculatorGraphConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mediapipe.CalculatorGraphConfig;
  return proto.mediapipe.CalculatorGraphConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mediapipe.CalculatorGraphConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mediapipe.CalculatorGraphConfig}
 */
proto.mediapipe.CalculatorGraphConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mediapipe.CalculatorGraphConfig.Node;
      reader.readMessage(value,proto.mediapipe.CalculatorGraphConfig.Node.deserializeBinaryFromReader);
      msg.addNode(value);
      break;
    case 6:
      var value = new mediapipe_framework_packet_factory_pb.PacketFactoryConfig;
      reader.readMessage(value,mediapipe_framework_packet_factory_pb.PacketFactoryConfig.deserializeBinaryFromReader);
      msg.addPacketFactory(value);
      break;
    case 7:
      var value = new mediapipe_framework_packet_generator_pb.PacketGeneratorConfig;
      reader.readMessage(value,mediapipe_framework_packet_generator_pb.PacketGeneratorConfig.deserializeBinaryFromReader);
      msg.addPacketGenerator(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumThreads(value);
      break;
    case 9:
      var value = new mediapipe_framework_status_handler_pb.StatusHandlerConfig;
      reader.readMessage(value,mediapipe_framework_status_handler_pb.StatusHandlerConfig.deserializeBinaryFromReader);
      msg.addStatusHandler(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addInputStream(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.addOutputStream(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.addInputSidePacket(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.addOutputSidePacket(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxQueueSize(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReportDeadlock(value);
      break;
    case 12:
      var value = new mediapipe_framework_stream_handler_pb.InputStreamHandlerConfig;
      reader.readMessage(value,mediapipe_framework_stream_handler_pb.InputStreamHandlerConfig.deserializeBinaryFromReader);
      msg.setInputStreamHandler(value);
      break;
    case 13:
      var value = new mediapipe_framework_stream_handler_pb.OutputStreamHandlerConfig;
      reader.readMessage(value,mediapipe_framework_stream_handler_pb.OutputStreamHandlerConfig.deserializeBinaryFromReader);
      msg.setOutputStreamHandler(value);
      break;
    case 14:
      var value = new proto.mediapipe.ExecutorConfig;
      reader.readMessage(value,proto.mediapipe.ExecutorConfig.deserializeBinaryFromReader);
      msg.addExecutor(value);
      break;
    case 18:
      var value = new proto.mediapipe.ProfilerConfig;
      reader.readMessage(value,proto.mediapipe.ProfilerConfig.deserializeBinaryFromReader);
      msg.setProfilerConfig(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setPackage(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 1001:
      var value = new mediapipe_framework_mediapipe_options_pb.MediaPipeOptions;
      reader.readMessage(value,mediapipe_framework_mediapipe_options_pb.MediaPipeOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mediapipe.CalculatorGraphConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mediapipe.CalculatorGraphConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.CalculatorGraphConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mediapipe.CalculatorGraphConfig.Node.serializeBinaryToWriter
    );
  }
  f = message.getPacketFactoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      mediapipe_framework_packet_factory_pb.PacketFactoryConfig.serializeBinaryToWriter
    );
  }
  f = message.getPacketGeneratorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      mediapipe_framework_packet_generator_pb.PacketGeneratorConfig.serializeBinaryToWriter
    );
  }
  f = message.getNumThreads();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getStatusHandlerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      mediapipe_framework_status_handler_pb.StatusHandlerConfig.serializeBinaryToWriter
    );
  }
  f = message.getInputStreamList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getOutputStreamList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      15,
      f
    );
  }
  f = message.getInputSidePacketList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      16,
      f
    );
  }
  f = message.getOutputSidePacketList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      17,
      f
    );
  }
  f = message.getMaxQueueSize();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getReportDeadlock();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getInputStreamHandler();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      mediapipe_framework_stream_handler_pb.InputStreamHandlerConfig.serializeBinaryToWriter
    );
  }
  f = message.getOutputStreamHandler();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      mediapipe_framework_stream_handler_pb.OutputStreamHandlerConfig.serializeBinaryToWriter
    );
  }
  f = message.getExecutorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.mediapipe.ExecutorConfig.serializeBinaryToWriter
    );
  }
  f = message.getProfilerConfig();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.mediapipe.ProfilerConfig.serializeBinaryToWriter
    );
  }
  f = message.getPackage();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1001,
      f,
      mediapipe_framework_mediapipe_options_pb.MediaPipeOptions.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mediapipe.CalculatorGraphConfig.Node.repeatedFields_ = [3,4,5,6,8,13,1005];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.toObject = function(opt_includeInstance) {
  return proto.mediapipe.CalculatorGraphConfig.Node.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mediapipe.CalculatorGraphConfig.Node} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.CalculatorGraphConfig.Node.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    calculator: jspb.Message.getFieldWithDefault(msg, 2, ""),
    inputStreamList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    outputStreamList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    inputSidePacketList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    outputSidePacketList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    options: (f = msg.getOptions()) && mediapipe_framework_calculator_options_pb.CalculatorOptions.toObject(includeInstance, f),
    nodeOptionsList: jspb.Message.toObjectList(msg.getNodeOptionsList(),
    google_protobuf_any_pb.Any.toObject, includeInstance),
    sourceLayer: jspb.Message.getFieldWithDefault(msg, 9, 0),
    bufferSizeHint: jspb.Message.getFieldWithDefault(msg, 10, 0),
    inputStreamHandler: (f = msg.getInputStreamHandler()) && mediapipe_framework_stream_handler_pb.InputStreamHandlerConfig.toObject(includeInstance, f),
    outputStreamHandler: (f = msg.getOutputStreamHandler()) && mediapipe_framework_stream_handler_pb.OutputStreamHandlerConfig.toObject(includeInstance, f),
    inputStreamInfoList: jspb.Message.toObjectList(msg.getInputStreamInfoList(),
    proto.mediapipe.InputStreamInfo.toObject, includeInstance),
    executor: jspb.Message.getFieldWithDefault(msg, 14, ""),
    profilerConfig: (f = msg.getProfilerConfig()) && proto.mediapipe.ProfilerConfig.toObject(includeInstance, f),
    maxInFlight: jspb.Message.getFieldWithDefault(msg, 16, 0),
    externalInputList: (f = jspb.Message.getRepeatedField(msg, 1005)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node}
 */
proto.mediapipe.CalculatorGraphConfig.Node.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mediapipe.CalculatorGraphConfig.Node;
  return proto.mediapipe.CalculatorGraphConfig.Node.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mediapipe.CalculatorGraphConfig.Node} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node}
 */
proto.mediapipe.CalculatorGraphConfig.Node.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCalculator(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addInputStream(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addOutputStream(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addInputSidePacket(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addOutputSidePacket(value);
      break;
    case 7:
      var value = new mediapipe_framework_calculator_options_pb.CalculatorOptions;
      reader.readMessage(value,mediapipe_framework_calculator_options_pb.CalculatorOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 8:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addNodeOptions(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSourceLayer(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBufferSizeHint(value);
      break;
    case 11:
      var value = new mediapipe_framework_stream_handler_pb.InputStreamHandlerConfig;
      reader.readMessage(value,mediapipe_framework_stream_handler_pb.InputStreamHandlerConfig.deserializeBinaryFromReader);
      msg.setInputStreamHandler(value);
      break;
    case 12:
      var value = new mediapipe_framework_stream_handler_pb.OutputStreamHandlerConfig;
      reader.readMessage(value,mediapipe_framework_stream_handler_pb.OutputStreamHandlerConfig.deserializeBinaryFromReader);
      msg.setOutputStreamHandler(value);
      break;
    case 13:
      var value = new proto.mediapipe.InputStreamInfo;
      reader.readMessage(value,proto.mediapipe.InputStreamInfo.deserializeBinaryFromReader);
      msg.addInputStreamInfo(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setExecutor(value);
      break;
    case 15:
      var value = new proto.mediapipe.ProfilerConfig;
      reader.readMessage(value,proto.mediapipe.ProfilerConfig.deserializeBinaryFromReader);
      msg.setProfilerConfig(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxInFlight(value);
      break;
    case 1005:
      var value = /** @type {string} */ (reader.readString());
      msg.addExternalInput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mediapipe.CalculatorGraphConfig.Node.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mediapipe.CalculatorGraphConfig.Node} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mediapipe.CalculatorGraphConfig.Node.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCalculator();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInputStreamList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getOutputStreamList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getInputSidePacketList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getOutputSidePacketList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      mediapipe_framework_calculator_options_pb.CalculatorOptions.serializeBinaryToWriter
    );
  }
  f = message.getNodeOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getSourceLayer();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getBufferSizeHint();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getInputStreamHandler();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      mediapipe_framework_stream_handler_pb.InputStreamHandlerConfig.serializeBinaryToWriter
    );
  }
  f = message.getOutputStreamHandler();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      mediapipe_framework_stream_handler_pb.OutputStreamHandlerConfig.serializeBinaryToWriter
    );
  }
  f = message.getInputStreamInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.mediapipe.InputStreamInfo.serializeBinaryToWriter
    );
  }
  f = message.getExecutor();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getProfilerConfig();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.mediapipe.ProfilerConfig.serializeBinaryToWriter
    );
  }
  f = message.getMaxInFlight();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getExternalInputList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1005,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string calculator = 2;
 * @return {string}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.getCalculator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.setCalculator = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string input_stream = 3;
 * @return {!Array<string>}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.getInputStreamList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.setInputStreamList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.addInputStream = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearInputStreamList = function() {
  return this.setInputStreamList([]);
};


/**
 * repeated string output_stream = 4;
 * @return {!Array<string>}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.getOutputStreamList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.setOutputStreamList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.addOutputStream = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearOutputStreamList = function() {
  return this.setOutputStreamList([]);
};


/**
 * repeated string input_side_packet = 5;
 * @return {!Array<string>}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.getInputSidePacketList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.setInputSidePacketList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.addInputSidePacket = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearInputSidePacketList = function() {
  return this.setInputSidePacketList([]);
};


/**
 * repeated string output_side_packet = 6;
 * @return {!Array<string>}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.getOutputSidePacketList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.setOutputSidePacketList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.addOutputSidePacket = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearOutputSidePacketList = function() {
  return this.setOutputSidePacketList([]);
};


/**
 * optional CalculatorOptions options = 7;
 * @return {?proto.mediapipe.CalculatorOptions}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.getOptions = function() {
  return /** @type{?proto.mediapipe.CalculatorOptions} */ (
    jspb.Message.getWrapperField(this, mediapipe_framework_calculator_options_pb.CalculatorOptions, 7));
};


/**
 * @param {?proto.mediapipe.CalculatorOptions|undefined} value
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
*/
proto.mediapipe.CalculatorGraphConfig.Node.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated google.protobuf.Any node_options = 8;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.getNodeOptionsList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 8));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
*/
proto.mediapipe.CalculatorGraphConfig.Node.prototype.setNodeOptionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.addNodeOptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearNodeOptionsList = function() {
  return this.setNodeOptionsList([]);
};


/**
 * optional int32 source_layer = 9;
 * @return {number}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.getSourceLayer = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.setSourceLayer = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 buffer_size_hint = 10;
 * @return {number}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.getBufferSizeHint = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.setBufferSizeHint = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional InputStreamHandlerConfig input_stream_handler = 11;
 * @return {?proto.mediapipe.InputStreamHandlerConfig}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.getInputStreamHandler = function() {
  return /** @type{?proto.mediapipe.InputStreamHandlerConfig} */ (
    jspb.Message.getWrapperField(this, mediapipe_framework_stream_handler_pb.InputStreamHandlerConfig, 11));
};


/**
 * @param {?proto.mediapipe.InputStreamHandlerConfig|undefined} value
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
*/
proto.mediapipe.CalculatorGraphConfig.Node.prototype.setInputStreamHandler = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearInputStreamHandler = function() {
  return this.setInputStreamHandler(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.hasInputStreamHandler = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional OutputStreamHandlerConfig output_stream_handler = 12;
 * @return {?proto.mediapipe.OutputStreamHandlerConfig}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.getOutputStreamHandler = function() {
  return /** @type{?proto.mediapipe.OutputStreamHandlerConfig} */ (
    jspb.Message.getWrapperField(this, mediapipe_framework_stream_handler_pb.OutputStreamHandlerConfig, 12));
};


/**
 * @param {?proto.mediapipe.OutputStreamHandlerConfig|undefined} value
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
*/
proto.mediapipe.CalculatorGraphConfig.Node.prototype.setOutputStreamHandler = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearOutputStreamHandler = function() {
  return this.setOutputStreamHandler(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.hasOutputStreamHandler = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated InputStreamInfo input_stream_info = 13;
 * @return {!Array<!proto.mediapipe.InputStreamInfo>}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.getInputStreamInfoList = function() {
  return /** @type{!Array<!proto.mediapipe.InputStreamInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mediapipe.InputStreamInfo, 13));
};


/**
 * @param {!Array<!proto.mediapipe.InputStreamInfo>} value
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
*/
proto.mediapipe.CalculatorGraphConfig.Node.prototype.setInputStreamInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.mediapipe.InputStreamInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mediapipe.InputStreamInfo}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.addInputStreamInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.mediapipe.InputStreamInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearInputStreamInfoList = function() {
  return this.setInputStreamInfoList([]);
};


/**
 * optional string executor = 14;
 * @return {string}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.getExecutor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.setExecutor = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional ProfilerConfig profiler_config = 15;
 * @return {?proto.mediapipe.ProfilerConfig}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.getProfilerConfig = function() {
  return /** @type{?proto.mediapipe.ProfilerConfig} */ (
    jspb.Message.getWrapperField(this, proto.mediapipe.ProfilerConfig, 15));
};


/**
 * @param {?proto.mediapipe.ProfilerConfig|undefined} value
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
*/
proto.mediapipe.CalculatorGraphConfig.Node.prototype.setProfilerConfig = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearProfilerConfig = function() {
  return this.setProfilerConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.hasProfilerConfig = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional int32 max_in_flight = 16;
 * @return {number}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.getMaxInFlight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.setMaxInFlight = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * repeated string external_input = 1005;
 * @return {!Array<string>}
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.getExternalInputList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1005));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.setExternalInputList = function(value) {
  return jspb.Message.setField(this, 1005, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.addExternalInput = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1005, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node} returns this
 */
proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearExternalInputList = function() {
  return this.setExternalInputList([]);
};


/**
 * repeated Node node = 1;
 * @return {!Array<!proto.mediapipe.CalculatorGraphConfig.Node>}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.getNodeList = function() {
  return /** @type{!Array<!proto.mediapipe.CalculatorGraphConfig.Node>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mediapipe.CalculatorGraphConfig.Node, 1));
};


/**
 * @param {!Array<!proto.mediapipe.CalculatorGraphConfig.Node>} value
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
*/
proto.mediapipe.CalculatorGraphConfig.prototype.setNodeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mediapipe.CalculatorGraphConfig.Node=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mediapipe.CalculatorGraphConfig.Node}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.addNode = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mediapipe.CalculatorGraphConfig.Node, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.clearNodeList = function() {
  return this.setNodeList([]);
};


/**
 * repeated PacketFactoryConfig packet_factory = 6;
 * @return {!Array<!proto.mediapipe.PacketFactoryConfig>}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.getPacketFactoryList = function() {
  return /** @type{!Array<!proto.mediapipe.PacketFactoryConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, mediapipe_framework_packet_factory_pb.PacketFactoryConfig, 6));
};


/**
 * @param {!Array<!proto.mediapipe.PacketFactoryConfig>} value
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
*/
proto.mediapipe.CalculatorGraphConfig.prototype.setPacketFactoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.mediapipe.PacketFactoryConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mediapipe.PacketFactoryConfig}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.addPacketFactory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.mediapipe.PacketFactoryConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.clearPacketFactoryList = function() {
  return this.setPacketFactoryList([]);
};


/**
 * repeated PacketGeneratorConfig packet_generator = 7;
 * @return {!Array<!proto.mediapipe.PacketGeneratorConfig>}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.getPacketGeneratorList = function() {
  return /** @type{!Array<!proto.mediapipe.PacketGeneratorConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, mediapipe_framework_packet_generator_pb.PacketGeneratorConfig, 7));
};


/**
 * @param {!Array<!proto.mediapipe.PacketGeneratorConfig>} value
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
*/
proto.mediapipe.CalculatorGraphConfig.prototype.setPacketGeneratorList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.mediapipe.PacketGeneratorConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mediapipe.PacketGeneratorConfig}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.addPacketGenerator = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.mediapipe.PacketGeneratorConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.clearPacketGeneratorList = function() {
  return this.setPacketGeneratorList([]);
};


/**
 * optional int32 num_threads = 8;
 * @return {number}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.getNumThreads = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.setNumThreads = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * repeated StatusHandlerConfig status_handler = 9;
 * @return {!Array<!proto.mediapipe.StatusHandlerConfig>}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.getStatusHandlerList = function() {
  return /** @type{!Array<!proto.mediapipe.StatusHandlerConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, mediapipe_framework_status_handler_pb.StatusHandlerConfig, 9));
};


/**
 * @param {!Array<!proto.mediapipe.StatusHandlerConfig>} value
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
*/
proto.mediapipe.CalculatorGraphConfig.prototype.setStatusHandlerList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.mediapipe.StatusHandlerConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mediapipe.StatusHandlerConfig}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.addStatusHandler = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.mediapipe.StatusHandlerConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.clearStatusHandlerList = function() {
  return this.setStatusHandlerList([]);
};


/**
 * repeated string input_stream = 10;
 * @return {!Array<string>}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.getInputStreamList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.setInputStreamList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.addInputStream = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.clearInputStreamList = function() {
  return this.setInputStreamList([]);
};


/**
 * repeated string output_stream = 15;
 * @return {!Array<string>}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.getOutputStreamList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 15));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.setOutputStreamList = function(value) {
  return jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.addOutputStream = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.clearOutputStreamList = function() {
  return this.setOutputStreamList([]);
};


/**
 * repeated string input_side_packet = 16;
 * @return {!Array<string>}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.getInputSidePacketList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 16));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.setInputSidePacketList = function(value) {
  return jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.addInputSidePacket = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.clearInputSidePacketList = function() {
  return this.setInputSidePacketList([]);
};


/**
 * repeated string output_side_packet = 17;
 * @return {!Array<string>}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.getOutputSidePacketList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 17));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.setOutputSidePacketList = function(value) {
  return jspb.Message.setField(this, 17, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.addOutputSidePacket = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.clearOutputSidePacketList = function() {
  return this.setOutputSidePacketList([]);
};


/**
 * optional int32 max_queue_size = 11;
 * @return {number}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.getMaxQueueSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.setMaxQueueSize = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional bool report_deadlock = 21;
 * @return {boolean}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.getReportDeadlock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.setReportDeadlock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional InputStreamHandlerConfig input_stream_handler = 12;
 * @return {?proto.mediapipe.InputStreamHandlerConfig}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.getInputStreamHandler = function() {
  return /** @type{?proto.mediapipe.InputStreamHandlerConfig} */ (
    jspb.Message.getWrapperField(this, mediapipe_framework_stream_handler_pb.InputStreamHandlerConfig, 12));
};


/**
 * @param {?proto.mediapipe.InputStreamHandlerConfig|undefined} value
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
*/
proto.mediapipe.CalculatorGraphConfig.prototype.setInputStreamHandler = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.clearInputStreamHandler = function() {
  return this.setInputStreamHandler(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.hasInputStreamHandler = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional OutputStreamHandlerConfig output_stream_handler = 13;
 * @return {?proto.mediapipe.OutputStreamHandlerConfig}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.getOutputStreamHandler = function() {
  return /** @type{?proto.mediapipe.OutputStreamHandlerConfig} */ (
    jspb.Message.getWrapperField(this, mediapipe_framework_stream_handler_pb.OutputStreamHandlerConfig, 13));
};


/**
 * @param {?proto.mediapipe.OutputStreamHandlerConfig|undefined} value
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
*/
proto.mediapipe.CalculatorGraphConfig.prototype.setOutputStreamHandler = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.clearOutputStreamHandler = function() {
  return this.setOutputStreamHandler(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.hasOutputStreamHandler = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * repeated ExecutorConfig executor = 14;
 * @return {!Array<!proto.mediapipe.ExecutorConfig>}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.getExecutorList = function() {
  return /** @type{!Array<!proto.mediapipe.ExecutorConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mediapipe.ExecutorConfig, 14));
};


/**
 * @param {!Array<!proto.mediapipe.ExecutorConfig>} value
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
*/
proto.mediapipe.CalculatorGraphConfig.prototype.setExecutorList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.mediapipe.ExecutorConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mediapipe.ExecutorConfig}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.addExecutor = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.mediapipe.ExecutorConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.clearExecutorList = function() {
  return this.setExecutorList([]);
};


/**
 * optional ProfilerConfig profiler_config = 18;
 * @return {?proto.mediapipe.ProfilerConfig}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.getProfilerConfig = function() {
  return /** @type{?proto.mediapipe.ProfilerConfig} */ (
    jspb.Message.getWrapperField(this, proto.mediapipe.ProfilerConfig, 18));
};


/**
 * @param {?proto.mediapipe.ProfilerConfig|undefined} value
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
*/
proto.mediapipe.CalculatorGraphConfig.prototype.setProfilerConfig = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.clearProfilerConfig = function() {
  return this.setProfilerConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.hasProfilerConfig = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional string package = 19;
 * @return {string}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.getPackage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.setPackage = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string type = 20;
 * @return {string}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional MediaPipeOptions options = 1001;
 * @return {?proto.mediapipe.MediaPipeOptions}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.getOptions = function() {
  return /** @type{?proto.mediapipe.MediaPipeOptions} */ (
    jspb.Message.getWrapperField(this, mediapipe_framework_mediapipe_options_pb.MediaPipeOptions, 1001));
};


/**
 * @param {?proto.mediapipe.MediaPipeOptions|undefined} value
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
*/
proto.mediapipe.CalculatorGraphConfig.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 1001, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mediapipe.CalculatorGraphConfig} returns this
 */
proto.mediapipe.CalculatorGraphConfig.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mediapipe.CalculatorGraphConfig.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1001) != null;
};


goog.object.extend(exports, proto.mediapipe);
